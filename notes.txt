I removed the feature that determines if a character is the main protagonist in the movie and then changes the description rendered accordingly.
I couldn't get it to work for all cases and not sure it's actually posisble with the information provided by the api. I'm leaving notes for it here in case I can come up with a way to make it work at a later date.


The idea was that whether or not they are the protagonist would be identified and included in the formatted character object. This would then be used to conditionally render different descriptions - "[char name] is the main protagonist in the movie [movie title]" or the less prestigious "[char name] is a character from the movie [movie title]". 
I built this into the app as follows:

-----------------------------
In App.jsx 
-----------------------------
the 'formatCharacter' function included an additional key 'leadRole' with a boolean value returned by the function  'isMainCharacter' as below:

  function formatCharacter(characterData) {
    let character = {
      loaded: true,
      name: characterData.name,
      movies: characterData.films,
      mainTitle: formatMainTitle(characterData.films[0]),
      parkAttractions: characterData.parkAttractions,
      image: characterData.imageUrl,
      info: characterData.sourceUrl,
    };
    character.leadRole = isMainCharacter(character.name, character.mainTitle);
    setCharacterInfo(character);
  }

 The function takes in as arguments the character name and their main movie title from the preexisting key value pairs in the character object.
 It then breaks up the name string to see if any part of it is also a part of the title: 

  function isMainCharacter(name, movie) {
    let splitName = name.split(" ");
    return splitName.some((item) => movie.includes(item));
  }

 This works great for movies where the main character is not an exact match with but is still part of the movie title eg. 'Snow White'/'Snow White and the seven drarfs', 'Alice'/'Alice in Wonderland'. It also works with the exact matches of course, eg. 'Aladdin'/'Aladdin'.
 This was particularly useful because the api lists the character's full name where it is known. eg. 'Mulan' is listed as 'Fa Mulan' so was not an exact match to the title 'Mulan'.
 
 The problem is this did not cover cases where the title of the movie is not named after the character eg.  'Belle'/'Beauty and the Beast',  'Quasimodo'/'The Hunchback of Notre Dame'. These return false based on the logic so in these cases the description won't reflect their main character status. This doesn't make the description incorrect per se, they are still "a character from the movie", so I kept it in at first.
 However, I found a case that gave a false positive. "Jessica Rabbit"/"Who Framed Roger Rabbit" returns true because, being Mrs Rabbit, she shares her last name with the title character. This means she is incorrectly described as "the main protagonist". There may be other cases where this happens in movies where characters share parts of their names.

 Because there is limited information in the api, I don't think there is any other way to build this so that it works for all cases. I could leave in a feature that identifies at least those protagonists who match their title exactly but it doesn't seem worth it as so many would be missed out. If the api is ever expanded or I find another one wiht more information I'll revisit this. For now I have removed it and all characters will be described the same. 
  

-----------------------------
In Results.jsx
-----------------------------
the relevant section looked like this 
...
<div className="col-md-6">
            <p>
              <strong>{character.name} </strong>is{" "}
              {character.leadRole ? (
                <span>
                  the main protagonist in the movie{" "}
                  <em>"{character.mainTitle}"</em>,
                </span>
              ) : (
                <span>
                  a character from the movie <em>{character.mainTitle}</em>
                </span>
              )}{" "}
              and also appears in
            </p>
...


